<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development from &#34;Scratch&#34;</title>
    <link>http://ashkanfaghihi.dev/</link>
    <description>Recent content on Development from &#34;Scratch&#34;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Feb 2023 18:12:35 -0800</lastBuildDate><atom:link href="http://ashkanfaghihi.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intuitive Proof for Floyd&#39;s Algorithm (Linked List Cycle)</title>
      <link>http://ashkanfaghihi.dev/posts/floyds-algorithm-intuitive-proof/</link>
      <pubDate>Thu, 02 Feb 2023 18:12:35 -0800</pubDate>
      
      <guid>http://ashkanfaghihi.dev/posts/floyds-algorithm-intuitive-proof/</guid>
      <description>Introduction Link to heading I found a few resources that I think did a decent job at explaining bits and pieces but not the full thing. This is also a tool for me to think things through as I go through the proof.
Leetcode solution with useful insights
Math stackexchange with useful insights
Neetcode&amp;rsquo;s solution, useful insights on proof
Unrelated but cool modulus related history
Note for clarity Link to heading First node of the tail means -T First node of the cycle means 0</description>
    </item>
    
    <item>
      <title>Leetcode 91: Decode Ways (Bounding your recursive calls)</title>
      <link>http://ashkanfaghihi.dev/posts/decode-ways/</link>
      <pubDate>Mon, 30 Jan 2023 09:09:58 -0800</pubDate>
      
      <guid>http://ashkanfaghihi.dev/posts/decode-ways/</guid>
      <description>Why I like this problem Link to heading https://leetcode.com/problems/decode-ways/
A lot of the canonical recursive problems you start out with have really simple code. Things that come to mind are https://leetcode.com/problems/fibonacci-number/, https://leetcode.com/problems/climbing-stairs/ and https://leetcode.com/problems/house-robber/. This is because the recursive calls are really simple, it doesn&amp;rsquo;t really require you to understand how the recursive calls unwind. Decode ways does this will for a few reasons.
The subproblems are not trivial to &amp;ldquo;build&amp;rdquo; You can&amp;rsquo;t blindly make recursive calls Note: Most solutions end up doing a bottom up approach which is better, I just want to discuess the top down approach since that is usually my first way to tackle these problems.</description>
    </item>
    
    <item>
      <title>Quarrel With Dynamic Programming</title>
      <link>http://ashkanfaghihi.dev/posts/quarrel-with-dynamic-programming/</link>
      <pubDate>Fri, 27 Jan 2023 11:16:59 -0800</pubDate>
      
      <guid>http://ashkanfaghihi.dev/posts/quarrel-with-dynamic-programming/</guid>
      <description>DP is an Art Link to heading Snapshot is clear, global is not Link to heading An issue I ran into with developing an intuition with dp is that in some cases the immediete solution is obvious yet I had a nagging sense of how could it be right long term. To explain my issue I&amp;rsquo;ll go through a leetcode problem. https://leetcode.com/problems/min-cost-climbing-stairs/description/
The case specifially which led to this is one where we can see a large cost being unattractive short term but my intuition was telling me couldn&amp;rsquo;t it be possible that in the long run this is good?</description>
    </item>
    
    <item>
      <title>Choose Unchoose Pattern Case Study</title>
      <link>http://ashkanfaghihi.dev/posts/choose-unchoose-pattern/</link>
      <pubDate>Thu, 26 Jan 2023 19:15:28 -0800</pubDate>
      
      <guid>http://ashkanfaghihi.dev/posts/choose-unchoose-pattern/</guid>
      <description>Pre Requisites Link to heading This post won&amp;rsquo;t elaborate on the following topics since there is already many great ones:
Choose unchoose pattern Leetcode Combinations Problem https://leetcode.com/problems/combinations/description Backtracking Context Link to heading This pattern is often just given as a part of a template for similar problems/ https://leetcode.com/problems/combinations/solutions/429526/general-backtracking-questions-solutions-in-python-for-reference/ https://leetcode.com/problems/combinations/solutions/27006/a-template-to-those-combination-problems/
My goal is to better give intuition behind it by comparing it to an equivalent but different code
My Initial Solution Link to heading I was working on Leetcode Combinations problem and realized that this is an choose unchoose pattern like problem but my implementation seemed a little funny in comparison.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://ashkanfaghihi.dev/about/about/</link>
      <pubDate>Sat, 21 Jan 2023 16:18:17 -0800</pubDate>
      
      <guid>http://ashkanfaghihi.dev/about/about/</guid>
      <description>Introduction Link to heading Welcome to my page. How you got here I have no clue but I hope it can be of service to you in some way. My goal for this page is to discuss some concepts that I think are of value. Short and sweet posts that expand or introduce you to topics that I stumbled on. After some time I&amp;rsquo;ve learned to avoid some websites like medium since they end up beating some topics to death.</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>http://ashkanfaghihi.dev/posts/my-first-post/</link>
      <pubDate>Sat, 21 Jan 2023 15:16:27 -0800</pubDate>
      
      <guid>http://ashkanfaghihi.dev/posts/my-first-post/</guid>
      <description>Introduction Link to heading TODO</description>
    </item>
    
  </channel>
</rss>
